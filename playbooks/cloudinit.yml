---
- name: Patch Cloud System
  hosts: cloudinit
  become: true
  become_user: root
  tasks:
      - name: Patch Cloud System | Checking essential variables | pv_cloud_init_user
        ansible.builtin.fail:
            msg: "pv_cloud_init_user is not defined or is None"
        when: pv_cloud_init_user is not defined or pv_cloud_init_user == "" or pv_cloud_init_user == None

      - name: Patch Cloud System | Checking essential variables | pv_cloud_init_group
        ansible.builtin.fail:
            msg: "pv_cloud_init_group is not defined or is None"
        when: pv_cloud_init_group is not defined or pv_cloud_init_group == "" or pv_cloud_init_group == None

      - name: Patch Cloud System | Checking essential variables | pv_cloud_init_authorized_keys
        ansible.builtin.fail:
            msg: "pv_cloud_init_authorized_keys is not defined or is None"
        when: pv_cloud_init_authorized_keys is not defined
            or pv_cloud_init_authorized_keys == "" or pv_cloud_init_authorized_keys == None

      - name: Patch Cloud System | Checking essential variables | pv_cloud_init_is_dev_machine
        ansible.builtin.fail:
            msg: "pv_cloud_init_is_dev_machine is not defined or is None"
        when: pv_cloud_init_is_dev_machine is not defined or pv_cloud_init_is_dev_machine == ""
            or pv_cloud_init_is_dev_machine == None

      - name: Patch Cloud System | Checking essential variables | pv_cloud_init_hostname
        ansible.builtin.fail:
            msg: "pv_cloud_init_hostname is not defined or is None"
        when: pv_cloud_init_hostname is not defined or pv_cloud_init_hostname == ""
            or pv_cloud_init_hostname == None

      - name: Patch Cloud System | Checking essential variables | pv_cloud_init_domain
        ansible.builtin.fail:
            msg: "pv_cloud_init_domain is not defined or is None"
        when: pv_cloud_init_domain is not defined or pv_cloud_init_domain == ""
            or pv_cloud_init_domain == None

      - name: Patch Cloud System | Checking essential variables | pv_cloud_init_install_docker
        ansible.builtin.fail:
            msg: "pv_cloud_init_install_docker is not defined or is None"
        when: pv_cloud_init_install_docker is not defined or pv_cloud_init_install_docker == ""
            or pv_cloud_init_install_docker == None

      - name: Patch Cloud System | Make sure bash is installed
        ansible.builtin.apt:
            name: bash
            state: present
            update_cache: true
            install_recommends: true

      - name: Patch Cloud System | Add application user
        ansible.builtin.include_role:
            name: arpanrec.nebula.user_add
        vars:
            user_add_rv_user_primary_group: "{{ pv_cloud_init_group }}"
            user_add_rv_username: "{{ pv_cloud_init_user }}"
            user_add_rv_ssh_access_public_key_content_list: "{{ lookup('ansible.builtin.file',
                pv_cloud_init_authorized_keys).splitlines() }}"
            user_add_rv_user_default_shell: "/bin/bash"
            user_add_rv_user_nopasswd_commands: ["ALL"]
            user_add_rv_user_extra_groups: ["wheel"]

      - name: Patch Cloud System | Linux Patching
        ansible.builtin.include_role:
            name: arpanrec.nebula.linux_patching
        vars:
            linux_patching_rv_install_devel_packages: "{{ pv_cloud_init_is_dev_machine | bool }}"
            linux_patching_rv_hostname: "{{ pv_cloud_init_hostname }}"
            linux_patching_rv_domain_name: "{{ pv_cloud_init_domain }}"

      - name: Patch Cloud System | SSH Hardening
        ansible.builtin.include_role:
            name: arpanrec.nebula.ssh_hardening

      - name: Patch Cloud System | Install Docker
        when: pv_cloud_init_install_docker | bool
        ansible.builtin.include_role:
            name: geerlingguy.docker
        vars:
            docker_users:
                - "{{ pv_cloud_init_user }}"
