---
- name: Minio | Prerequisite.
  ansible.builtin.import_tasks: prerequisites.yml

- name: Minio | Get Release.
  ansible.builtin.set_fact:
      minio_version_details: "{{ lookup('arpanrec.nebula.version_db', 'minio',
          minio_rv_version=minio_rv_version) | from_json }}"

- name: Minio | Add minio group.
  ansible.builtin.group:
      name: "{{ minio_service_group }}"
      state: present
      system: true
  notify:
      - Minio | Restart systemd service

- name: Minio | Add minio user.
  ansible.builtin.user:
      name: "{{ minio_service_user }}"
      group: "{{ minio_service_group }}"
      system: true
  notify:
      - Minio | Restart systemd service

- name: Minio | Create directories.
  ansible.builtin.file:
      path: "{{ item }}"
      owner: "{{ minio_service_user }}"
      group: "{{ minio_service_group }}"
      mode: "0755"
      state: directory
  loop:
      - "{{ minio_rv_directory }}"
      - "{{ minio_rv_data_directory }}"
      - "{{ minio_rv_directory }}/certs"
      - "{{ minio_rv_directory }}/certs/CAs"
  notify:
      - Minio | Restart systemd service

- name: Minio | Download gpg signature.
  ansible.builtin.get_url:
      url: "{{ minio_version_details.download_link }}.asc"
      mode: "0755"
      owner: "{{ minio_service_user }}"
      group: "{{ minio_service_group }}"
      dest: "{{ minio_rv_directory }}/minio-{{ minio_version_details.version }}.asc"

- name: Minio | Download binary.
  ansible.builtin.get_url:
      url: "{{ minio_version_details.download_link }}"
      checksum: "{{ minio_version_details.checksum | default(omit) }}"
      mode: "0755"
      owner: root
      group: root
      dest: "{{ minio_executable }}"
  notify:
      - Minio | Restart systemd service

- name: Minio | Verify binary.
  ansible.builtin.command:
      argv:
          - gpg
          - --verify
          - "{{ minio_rv_directory }}/minio-{{ minio_version_details.version }}.asc"
          - "{{ minio_executable }}"
  register: minio_verify_gpg_signature_res
  failed_when: minio_verify_gpg_signature_res.rc != 0
  changed_when: false

- name: MinIO | Create Env File for systemd # yamllint disable rule:line-length
  ansible.builtin.copy:
      content: |+
          MINIO_KMS_KES_KEY_NAME=default
          MINIO_ROOT_USER={{ minio_root_user }}
          MINIO_ROOT_PASSWORD={{ minio_root_password }}
          MINIO_REGION=us-east-1
          MINIO_VOLUMES={{ minio_rv_data_directory }}
          MINIO_OPTS="--address :{{ minio_rv_s3_port }} --console-address :{{ minio_rv_console_port }} --certs-dir {{ minio_rv_directory }}/certs"
      dest: "{{ minio_rv_directory }}/minio.env"
      owner: "{{ minio_service_user }}"
      group: "{{ minio_service_group }}"
      mode: "0600"
  notify:
      - Minio | Restart systemd service

- name: Minio | Write server certificate.
  when: minio_server_cert_pem_content is defined
      and minio_server_cert_pem_content is not none
      minio_server_cert_pem_content | length > 0
  ansible.builtin.copy:
      dest: "{{ minio_rv_directory }}/certs/public.crt"
      content: "{{ minio_server_cert_pem_content }}"
      owner: "{{ minio_service_user }}"
      group: "{{ minio_service_group }}"
      mode: "0644"
  notify:
      - Minio | Restart systemd service

- name: Minio | Write server private key.
  ansible.builtin.copy:
      dest: "{{ minio_rv_directory }}/certs/private.key"
      content: "{{ minio_server_key_pem_content }}"
      owner: "{{ minio_service_user }}"
      group: "{{ minio_service_group }}"
      mode: "0600"
  when: minio_server_key_pem_content is defined
      and minio_server_key_pem_content is not none
      minio_server_key_pem_content | length > 0
  notify:
      - Minio | Restart systemd service

- name: Minio | Write CA certificate.
  ansible.builtin.copy:
      dest: "{{ minio_rv_directory }}/certs/CAs/ca.crt"
      content: "{{ minio_server_ca_pem_content }}"
      owner: "{{ minio_service_user }}"
      group: "{{ minio_service_group }}"
      mode: "0644"
  when: minio_server_ca_pem_content is defined
      and minio_server_ca_pem_content is not none
      minio_server_ca_pem_content | length > 0
  notify:
      - Minio | Restart systemd service

- name: Minio | Install systemd service file.
  ansible.builtin.template:
      src: systemd-minio.service.j2
      dest: /etc/systemd/system/minio-{{ minio_cluster_name }}.service
      owner: root
      group: root
      mode: "0644"
  when: minio_rv_init_system_systemd
  notify:
      - Minio | Restart systemd service

- name: Minio | Enable and start systemd service.
  ansible.builtin.systemd:
      name: minio-{{ minio_cluster_name }}
      enabled: true
      state: started
      daemon_reload: true
  when: minio_rv_init_system_systemd
  notify:
      - Minio | Restart systemd service

- name: Minio | Gather the package facts.
  ansible.builtin.package_facts:
      manager: auto

- name: Minio | Allow ufw port.
  when: "'ufw' in ansible_facts.packages and ansible_facts.packages['ufw'] | length > 0"
  community.general.ufw:
      state: enabled
      port: "{{ item }}"
      comment: Minio managed by ansible.
      proto: tcp
      rule: allow
      to: 0.0.0.0/0
  loop:
      - "{{ minio_rv_s3_port }}"
      - "{{ minio_rv_console_port }}"

- name: Minio | Client
  ansible.builtin.import_tasks:
      file: minio_client.yml
