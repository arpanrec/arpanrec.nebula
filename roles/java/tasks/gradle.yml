---
- name: Oracle JDK | Gradle | Get downloaded file stat
  ansible.builtin.stat:
      path: "{{ java_rv_jdk_gradle_tarball_download_path }}"
  register: java_rv_jdk_gradle_tarball_stat

- name: Oracle JDK | Gradle | Download
  when: not java_rv_jdk_gradle_tarball_stat.stat.exists
  block:
      - name: "Oracle JDK | Gradle | Download tarball"
        ansible.builtin.get_url:
            url: "{{ oracle_jdk_tmp_version_details.extras.gradle.download_link }}"
            checksum: "{{ oracle_jdk_tmp_version_details.extras.gradle.checksum | default(omit) }}"
            dest: "{{ java_rv_jdk_gradle_tarball_download_path }}"
            mode: "0700"

      - name: Oracle JDK | Gradle | Remove old temporary unzip directory if exists
        ansible.builtin.file:
            path: "{{ java_rv_jdk_gradle_tmp_unzip_path }}/gradle-{{
                oracle_jdk_tmp_version_details.extras.gradle.version }}"
            state: absent

  rescue:
      - name: Oracle JDK | Gradle | Remove tarball
        ansible.builtin.file:
            path: "{{ java_rv_jdk_gradle_tarball_download_path }}"
            state: absent

      - name: Oracle JDK | Gradle | Fail
        ansible.builtin.fail:
            msg: |+
                Failed to download {{ java_rv_jdk_gradle_download_url }}
                Check the errors above.

- name: Oracle JDK | Gradle | Create temporary unzip directory
  ansible.builtin.file:
      path: "{{ java_rv_jdk_gradle_tmp_unzip_path }}"
      state: directory
      mode: "0700"

- name: Oracle JDK | Gradle | Unarchive the zip
  ansible.builtin.unarchive:
      src: "{{ java_rv_jdk_gradle_tarball_download_path }}"
      dest: "{{ java_rv_jdk_gradle_tmp_unzip_path }}"
      remote_src: true
  notify: Oracle JDK | Gradle | New Install

- name: Oracle JDK | Gradle | Flush handlers
  ansible.builtin.meta: flush_handlers
