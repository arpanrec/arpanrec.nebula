---
- name: Gitea | Secrets | generate gitea SECRET_KEY if not provided
  become: true
  become_user: "{{ gitea_service_user }}"
  ansible.builtin.shell: |+
      {{ gitea_executable }} generate secret SECRET_KEY > {{ gitea_secret_key_file }};
      chmod 400 {{ gitea_secret_key_file }};
  args:
      creates: "{{ gitea_secret_key_file }}"
      executable: /usr/bin/bash
  when: gitea_secret_key is not defined or gitea_secret_key | string | length == 0
  notify:
      - Gitea | Restart systemd service

- name: Gitea | Secrets | read gitea SECRET_KEY from file
  ansible.builtin.slurp:
      src: "{{ gitea_secret_key_file }}"
  register: gitea_remote_secret_key
  when: gitea_secret_key is not defined or gitea_secret_key | string | length == 0

- name: Gitea | Secrets | set fact gitea_secret_key
  ansible.builtin.set_fact:
      gitea_secret_key: "{{ gitea_remote_secret_key['content'] | b64decode }}"
  when: gitea_secret_key is not defined or gitea_secret_key | string |  length == 0

- name: Gitea | Secrets | generate gitea INTERNAL_TOKEN if not provided
  become: true
  become_user: "{{ gitea_service_user }}"
  ansible.builtin.shell: |+
      {{ gitea_executable }} generate secret INTERNAL_TOKEN > {{ gitea_internal_token_file }};
      chmod 400 {{ gitea_internal_token_file }};
  args:
      creates: "{{ gitea_internal_token_file }}"
      executable: /usr/bin/bash
  when: gitea_internal_token is not defined or gitea_internal_token | string | length == 0
  notify:
      - Gitea | Restart systemd service

- name: Gitea | Secrets | read gitea INTERNAL_TOKEN from file
  ansible.builtin.slurp:
      src: "{{ gitea_internal_token_file }}"
  register: gitea_remote_internal_token
  when: gitea_internal_token is not defined or gitea_internal_token | string | length == 0

- name: Gitea | Secrets | set fact gitea_internal_token
  ansible.builtin.set_fact:
      gitea_internal_token: "{{ gitea_remote_internal_token['content'] | b64decode }}"
  when: gitea_internal_token is not defined or gitea_internal_token | string | length == 0

- name: Gitea | Secrets | generate OAuth2 JWT_SECRET if not provided
  become: true
  become_user: "{{ gitea_service_user }}"
  ansible.builtin.shell: |+
      {{ gitea_executable }} generate secret JWT_SECRET > {{ gitea_oauth2_jwt_secret_file }};
      chmod 400 {{ gitea_oauth2_jwt_secret_file }};
  args:
      creates: "{{ gitea_oauth2_jwt_secret_file }}"
      executable: /usr/bin/bash
  when: gitea_oauth2_jwt_secret is not defined or gitea_oauth2_jwt_secret | length == 0
  notify:
      - Gitea | Restart systemd service

- name: Gitea | Secrets | read OAuth2 JWT_SECRET from file
  ansible.builtin.slurp:
      src: "{{ gitea_oauth2_jwt_secret_file }}"
  register: gitea_remote_oauth2_jwt_secret
  when: gitea_oauth2_jwt_secret is not defined or gitea_oauth2_jwt_secret | length == 0

- name: Gitea | Secrets | set fact gitea_oauth2_jwt_secret
  ansible.builtin.set_fact:
      gitea_oauth2_jwt_secret: "{{ gitea_remote_oauth2_jwt_secret['content'] | b64decode }}"
  when: gitea_oauth2_jwt_secret is not defined or gitea_oauth2_jwt_secret | length == 0

- name: Gitea | Secrets | generate LFS JWT_SECRET if not provided
  become: true
  become_user: "{{ gitea_service_user }}"
  ansible.builtin.shell: |+
      {{ gitea_executable }} generate secret JWT_SECRET > {{ gitea_lfs_jwt_secret_file }};
      chmod 400 {{ gitea_lfs_jwt_secret_file }};
  args:
      creates: "{{ gitea_lfs_jwt_secret_file }}"
      executable: /usr/bin/bash
  when: gitea_lfs_jwt_secret is not defined or gitea_lfs_jwt_secret | length == 0
  notify:
      - Gitea | Restart systemd service

- name: Gitea | Secrets | read LFS JWT_SECRET from file
  ansible.builtin.slurp:
      src: "{{ gitea_lfs_jwt_secret_file }}"
  register: gitea_remote_lfs_jwt_secret
  when: gitea_lfs_jwt_secret is not defined or gitea_lfs_jwt_secret | length == 0

- name: Gitea | Secrets | set fact gitea_lfs_jwt_secret
  ansible.builtin.set_fact:
      gitea_lfs_jwt_secret: "{{ gitea_remote_lfs_jwt_secret['content'] | b64decode }}"
  when: gitea_lfs_jwt_secret is not defined or gitea_lfs_jwt_secret | length == 0

- name: Gitea | Secrets | Write the secrets to file
  ansible.builtin.copy:
      content: "{{ item.content }}"
      dest: "{{ item.dest }}"
      mode: "0400"
      owner: "{{ gitea_service_user }}"
      group: "{{ gitea_service_group }}"
  loop:
      - content: "{{ gitea_secret_key }}"
        dest: "{{ gitea_secret_key_file }}"
      - content: "{{ gitea_internal_token }}"
        dest: "{{ gitea_internal_token_file }}"
      - content: "{{ gitea_oauth2_jwt_secret }}"
        dest: "{{ gitea_oauth2_jwt_secret_file }}"
      - content: "{{ gitea_lfs_jwt_secret }}"
        dest: "{{ gitea_lfs_jwt_secret_file }}"
