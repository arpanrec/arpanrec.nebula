---
- name: Gitea | Database | Postgresql | set DB_TYPE to postgres
  community.general.ini_file:
      path: "{{ gitea_app_ini_file }}"
      owner: "{{ gitea_service_user }}"
      group: "{{ gitea_service_group }}"
      mode: "0640"
      create: false
      backup: false
      no_extra_spaces: false
      section: "database"
      option: "DB_TYPE"
      value: "postgres"
  notify:
      - Gitea | Restart systemd service

- name: Gitea | Database | Postgresql | set HOST of postgres
  community.general.ini_file:
      path: "{{ gitea_app_ini_file }}"
      owner: "{{ gitea_service_user }}"
      group: "{{ gitea_service_group }}"
      mode: "0640"
      create: false
      backup: false
      no_extra_spaces: false
      section: "database"
      option: "HOST"
      value: "{{ gitea_config_db_postgresql['host'] }}"
  notify:
      - Gitea | Restart systemd service

- name: Gitea | Database | Postgresql | set NAME of postgres
  community.general.ini_file:
      path: "{{ gitea_app_ini_file }}"
      owner: "{{ gitea_service_user }}"
      group: "{{ gitea_service_group }}"
      mode: "0640"
      create: false
      backup: false
      no_extra_spaces: false
      section: "database"
      option: "NAME"
      value: "{{ gitea_config_db_postgresql['name'] }}"
  notify:
      - Gitea | Restart systemd service

- name: Gitea | Database | Postgresql | set USER of postgres
  community.general.ini_file:
      path: "{{ gitea_app_ini_file }}"
      owner: "{{ gitea_service_user }}"
      group: "{{ gitea_service_group }}"
      mode: "0640"
      create: false
      backup: false
      no_extra_spaces: false
      section: "database"
      option: "USER"
      value: "{{ gitea_config_db_postgresql['user'] }}"
  notify:
      - Gitea | Restart systemd service

- name: Gitea | Database | Postgresql | set PASSWD of postgres
  when: gitea_config_db_postgresql['passwd'] is defined
      and gitea_config_db_postgresql['passwd'] != None
      and gitea_config_db_postgresql['passwd'] | length > 1
  community.general.ini_file:
      path: "{{ gitea_app_ini_file }}"
      owner: "{{ gitea_service_user }}"
      group: "{{ gitea_service_group }}"
      mode: "0640"
      create: false
      backup: false
      no_extra_spaces: false
      section: "database"
      option: "PASSWD"
      value: "{{ gitea_config_db_postgresql['passwd'] }}"
  notify:
      - Gitea | Restart systemd service

- name: Gitea | Database | Postgresql | remove PASSWD of postgres
  when: gitea_config_db_postgresql['passwd'] is not defined
      or gitea_config_db_postgresql['passwd'] == None
      or gitea_config_db_postgresql['passwd'] | length < 1
  community.general.ini_file:
      path: "{{ gitea_app_ini_file }}"
      owner: "{{ gitea_service_user }}"
      group: "{{ gitea_service_group }}"
      mode: "0640"
      create: false
      backup: false
      no_extra_spaces: false
      section: "database"
      option: "PASSWD"
      state: absent
  notify:
      - Gitea | Restart systemd service

- name: Gitea | Database | Postgresql | set SCHEMA of postgres
  when: gitea_config_db_postgresql['schema'] is defined
      and gitea_config_db_postgresql['schema'] != None
      and gitea_config_db_postgresql['schema'] | length > 1
  community.general.ini_file:
      path: "{{ gitea_app_ini_file }}"
      owner: "{{ gitea_service_user }}"
      group: "{{ gitea_service_group }}"
      mode: "0640"
      create: false
      backup: false
      no_extra_spaces: false
      section: "database"
      option: "SCHEMA"
      value: "{{ gitea_config_db_postgresql['schema'] }}"
  notify:
      - Gitea | Restart systemd service

- name: Gitea | Database | Postgresql | remove SCHEMA of postgres
  when: gitea_config_db_postgresql['schema'] is not defined
      or gitea_config_db_postgresql['schema'] == None
      or gitea_config_db_postgresql['schema'] | length < 1
  community.general.ini_file:
      path: "{{ gitea_app_ini_file }}"
      owner: "{{ gitea_service_user }}"
      group: "{{ gitea_service_group }}"
      mode: "0640"
      create: false
      backup: false
      no_extra_spaces: false
      section: "database"
      option: "SCHEMA"
      state: absent
  notify:
      - Gitea | Restart systemd service

- name: Gitea | Database | Postgresql | Verify ssl mode
  ansible.builtin.fail:
      msg: '"ssl_mode" should be one of ["disable", "require", "verify-ca", "verify-full"]'
  when: gitea_config_db_postgresql['ssl_mode'] is not defined
      or gitea_config_db_postgresql['ssl_mode'] == None
      or gitea_config_db_postgresql['ssl_mode'] not in ['disable', 'require', 'verify-ca', 'verify-full']

- name: Gitea | Database | Postgresql | set SSL_MODE of postgres
  community.general.ini_file:
      path: "{{ gitea_app_ini_file }}"
      owner: "{{ gitea_service_user }}"
      group: "{{ gitea_service_group }}"
      mode: "0640"
      create: false
      backup: false
      no_extra_spaces: false
      section: "database"
      option: "SSL_MODE"
      value: "{{ gitea_config_db_postgresql['ssl_mode'] }}"
  notify:
      - Gitea | Restart systemd service

- name: Gitea | Database | Postgresql | SSL Root Cert.
  when: gitea_config_db_postgresql['pg_ssl_root_cert_pem_content'] is defined
      and gitea_config_db_postgresql['pg_ssl_root_cert_pem_content'] != None
      and gitea_config_db_postgresql['pg_ssl_root_cert_pem_content'] | length > 1
  block:
      - name: Gitea | Database | Postgresql | SSL Root Cert | Create directory.
        ansible.builtin.file:
            path: "{{ gitea_config_db_pg_ssl_root_cert_file | dirname }}"
            owner: "{{ gitea_service_user }}"
            group: "{{ gitea_service_group }}"
            mode: "0755"
            state: directory
        notify:
            - Gitea | Restart systemd service

      - name: Gitea | Database | Postgresql | SSL Root Cert | Write certificate.
        ansible.builtin.copy:
            dest: "{{ gitea_config_db_pg_ssl_root_cert_file }}"
            owner: "{{ gitea_service_user }}"
            group: "{{ gitea_service_group }}"
            mode: "0644"
            content: "{{ gitea_config_db_postgresql['pg_ssl_root_cert_pem_content'] }}"
        notify:
            - Gitea | Restart systemd service

- name: Gitea | Database | Postgresql | SSL Cert.
  when: gitea_config_db_postgresql['pg_ssl_client_cert_pem_content'] is defined
      and gitea_config_db_postgresql['pg_ssl_client_cert_pem_content'] != None
      and gitea_config_db_postgresql['pg_ssl_client_cert_pem_content'] | length > 1
  block:
      - name: Gitea | Database | Postgresql | SSL Cert | Create directory.
        ansible.builtin.file:
            path: "{{ gitea_config_db_pg_ssl_cert_file | dirname }}"
            owner: "{{ gitea_service_user }}"
            group: "{{ gitea_service_group }}"
            mode: "0755"
            state: directory
        notify:
            - Gitea | Restart systemd service

      - name: Gitea | Database | Postgresql | SSL Cert | Write certificate.
        ansible.builtin.copy:
            dest: "{{ gitea_config_db_pg_ssl_cert_file }}"
            owner: "{{ gitea_service_user }}"
            group: "{{ gitea_service_group }}"
            mode: "0644"
            content: "{{ gitea_config_db_postgresql['pg_ssl_client_cert_pem_content'] }}"
        notify:
            - Gitea | Restart systemd service

- name: Gitea | Database | Postgresql | SSL Priv Key.
  when: gitea_config_db_postgresql['pg_ssl_client_key_pem_content'] is defined
      and gitea_config_db_postgresql['pg_ssl_client_key_pem_content'] != None
      and gitea_config_db_postgresql['pg_ssl_client_key_pem_content'] | length > 1
  block:
      - name: Gitea | Database | Postgresql | SSL Priv Key | Create directory.
        ansible.builtin.file:
            path: "{{ gitea_config_db_pg_ssl_key_file | dirname }}"
            owner: "{{ gitea_service_user }}"
            group: "{{ gitea_service_group }}"
            mode: "0755"
            state: directory
        notify:
            - Gitea | Restart systemd service

      - name: Gitea | Database | Postgresql | SSL Priv Key | Write certificate.
        ansible.builtin.copy:
            dest: "{{ gitea_config_db_pg_ssl_key_file }}"
            owner: "{{ gitea_service_user }}"
            group: "{{ gitea_service_group }}"
            mode: "0600"
            content: "{{ gitea_config_db_postgresql['pg_ssl_client_key_pem_content'] }}"
        notify:
            - Gitea | Restart systemd service
