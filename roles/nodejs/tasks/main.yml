---
- name: NodeJS | Prerequisites
  ansible.builtin.import_tasks: prerequisites.yml

- name: NodeJS | Get Version Details
  ansible.builtin.set_fact:
      nodejs_version_details: "{{ lookup('arpanrec.nebula.version_db', 'nodejs',
          nodejs_rv_version=nodejs_rv_version) | from_json }}"

- name: NodeJS | Get downloaded file stat
  ansible.builtin.stat:
      path: "{{ nodejs_rv_tarball_download_path }}"
  register: nodejs_rv_tmp_downloaded_file_stat

- name: NodeJS | New Download | Create download directory
  ansible.builtin.file:
      path: "{{ nodejs_rv_tmp_install_cache_dir }}"
      state: directory
      mode: "0700"

- name: NodeJS | New Download
  when: not nodejs_rv_tmp_downloaded_file_stat.stat.exists
  block:
      - name: NodeJS | New Download | Download tarball
        ansible.builtin.get_url:
            url: "{{ nodejs_version_details.download_link }}"
            checksum: "{{ nodejs_version_details.checksum | default(omit) }}"
            dest: "{{ nodejs_rv_tarball_download_path }}"
            mode: "0700"
            timeout: 300
        timeout: 300

      - name: NodeJS | New Download | Remove old install directory
        ansible.builtin.file:
            path: "{{ nodejs_rv_install_path }}"
            state: absent

  rescue:
      - name: NodeJS | New Download | Fail | Cleanup
        ansible.builtin.file:
            path: "{{ nodejs_rv_tmp_install_cache_dir }}"
            state: absent

      - name: NodeJS | New Download | Fail | Fail
        ansible.builtin.fail:
            msg: Something went wrong, check the errors above

- name: NodeJS | Create install directory
  ansible.builtin.file:
      path: "{{ nodejs_rv_install_path }}"
      state: directory
      mode: "0700"

- name: NodeJS | Unarchive the tarball
  ansible.builtin.unarchive:
      src: "{{ nodejs_rv_tarball_download_path }}"
      dest: "{{ nodejs_rv_install_path }}"
      extra_opts: [--strip-components=1]
      remote_src: true

- name: NodeJS | Enable corepack package managers pnpm & yarn
  ansible.builtin.command:
      argv:
          - "{{ nodejs_rv_install_path }}/bin/corepack"
          - enable
          - "{{ item }}"
      creates: "{{ nodejs_rv_install_path }}/bin/{{ item }}"
  environment:
      PATH: "{{ nodejs_rv_install_path }}/bin:{{ ansible_env.PATH }}"
  loop:
      - pnpm
      - yarn

- name: NodeJS | Install node.js package globally.
  community.general.npm:
      name: "{{ item }}"
      global: true
      executable: "{{ nodejs_rv_install_path }}/bin/npm"
  with_items: "{{ nodejs_rv_global_packages }}"
  environment:
      PATH: "{{ nodejs_rv_install_path }}/bin:{{ ansible_env.PATH }}"
