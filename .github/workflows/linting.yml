---
name: Linting

"on":
    push:
    workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    pylint:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                python-version: ["3.10", "3.11", "3.12", "3.13"]
        name: pylint
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install poetry 1.8.4
              run: pipx install poetry==1.8.4

            - name: Set up Python "${{ matrix.python-version }}"
              uses: actions/setup-python@v5
              with:
                  python-version: "${{ matrix.python-version }}"
                  cache: poetry
                  # cache-dependency-path: pyproject.toml

            - name: Install dependencies
              run: poetry install --with dev

            - name: Analysing the code with pylint
              run: poetry run pylint $(git ls-files '*.py')

    black:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                python-version: ["3.10", "3.11", "3.12", "3.13"]
        name: black
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install poetry 1.8.4
              run: pipx install poetry==1.8.4

            - name: Set up Python "${{ matrix.python-version }}"
              uses: actions/setup-python@v5
              with:
                  python-version: "${{ matrix.python-version }}"
                  cache: poetry
                  # cache-dependency-path: pyproject.toml

            - name: Install dependencies
              run: poetry install --with dev

            - name: Analysing the code with black
              run: poetry run black --check $(git ls-files '*.py')
    isort:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                python-version: ["3.10", "3.11", "3.12", "3.13"]
        name: isort
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install poetry 1.8.4
              run: pipx install poetry==1.8.4

            - name: Set up Python "${{ matrix.python-version }}"
              uses: actions/setup-python@v5
              with:
                  python-version: "${{ matrix.python-version }}"
                  cache: poetry
                  # cache-dependency-path: pyproject.toml

            - name: Install dependencies
              run: poetry install --with dev

            - name: Analysing the code with isort
              run: poetry run isort --check-only $(git ls-files '*.py')
    mypy:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                python-version: ["3.10", "3.11", "3.12", "3.13"]
        name: mypy
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install poetry 1.8.4
              run: pipx install poetry==1.8.4

            - name: Set up Python "${{ matrix.python-version }}"
              uses: actions/setup-python@v5
              with:
                  python-version: "${{ matrix.python-version }}"
                  cache: poetry
                  # cache-dependency-path: pyproject.toml

            - name: Install dependencies
              run: poetry install --with dev

            - name: Analysing the code with mypy
              run: poetry run mypy $(git ls-files '*.py')

    yamllint:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                python-version: ["3.10", "3.11", "3.12", "3.13"]
        name: yamllint
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install poetry 1.8.4
              run: pipx install poetry==1.8.4

            - name: Set up Python "${{ matrix.python-version }}"
              uses: actions/setup-python@v5
              with:
                  python-version: "${{ matrix.python-version }}"
                  cache: poetry
                  # cache-dependency-path: pyproject.toml

            - name: Install dependencies
              run: poetry install --with dev

            - name: Analysing the code with yamllint
              run: poetry run yamllint .

    ansible-lint:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                python-version: ["3.10", "3.11", "3.12", "3.13"]
        name: ansible-lint
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install poetry 1.8.4
              run: pipx install poetry==1.8.4

            - name: Set up Python "${{ matrix.python-version }}"
              uses: actions/setup-python@v5
              with:
                  python-version: "${{ matrix.python-version }}"
                  cache: poetry
                  # cache-dependency-path: pyproject.toml

            - name: Cache ansible
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.ansible
                      ~/.cache/ansible-*
                  key: ansible-cache-${{ hashFiles('**/requirements.yml') }}

            - name: Install dependencies
              run: |+
                  poetry install
                  ansible-galaxy install -r requirements.yml

            - name: Analysing the code with ansible-lint
              run: poetry run ansible-lint
