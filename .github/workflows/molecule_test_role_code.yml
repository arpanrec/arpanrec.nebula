---
name: Molecule Test Role Code

"on":
    workflow_dispatch:
    pull_request:
        paths:
            - "!roles/code/README.md"
            - ".github/workflows/molecule_test_role_code.yml"
            - "meta/**"
            - "molecule/role.code.docker/**"
            - "plugins/lookup/version_db.py"
            - "plugins/module_utils/__init__.py"
            - "plugins/module_utils/py.typed"
            - "plugins/module_utils/version_db/__init__.py"
            - "plugins/module_utils/version_db/code.py"
            - "plugins/module_utils/version_db/models.py"
            - "plugins/module_utils/version_db/py.typed"
            - "uv.lock"
            - "requirements.yml"
            - "roles/code/**"

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    molecule_test_role_code:
        timeout-minutes: 60
        runs-on: ubuntu-24.04
        strategy:
            fail-fast: false
            matrix:
                python-version: ["3.11", "3.12", "3.13"]
        steps:
            - name: Checkout
              uses: actions/checkout@v4.2.2

            - name: Install uv and set the python version
              uses: astral-sh/setup-uv@v6.6.0
              with:
                  python-version: ${{ matrix.python-version }}
                  enable-cache: true

            - name: Cache ansible
              uses: actions/cache@v4.2.2
              with:
                  path: |
                      ~/.ansible
                      ~/.cache/ansible-*
                  key: ansible-cache-py.${{ matrix.python-version }}-${{ hashFiles('**/requirements.yml') }}

            - name: Install dependencies
              run: |+
                  uv run --python ${{ matrix.python-version }} --managed-python python --version
                  uv sync --python ${{ matrix.python-version }} --managed-python --extra dev

            - name: Run Molecule Test
              run: uv run --python ${{ matrix.python-version }} --managed-python molecule test -s role.code.docker
