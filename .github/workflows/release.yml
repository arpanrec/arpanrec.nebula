---
name: Release
"on":
    push:

jobs:
    release:
        name: release
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Import Secrets
              id: import-secrets
              uses: hashicorp/vault-action@v3
              with:
                  url: "${{ secrets.VAULT_ADDR }}"
                  caCertificate: ${{ secrets.ROOT_CA_CERTIFICATE_CONTENT_BASE64 }}
                  clientKey: ${{ secrets.VAULT_CLIENT_PRIVATE_KEY_CONTENT_BASE64 }}
                  clientCertificate: ${{ secrets.VAULT_CLIENT_CERTIFICATE_CONTENT_BASE64 }}
                  method: approle
                  roleId: ${{ secrets.VAULT_APPROLE_ROLE_ID }}
                  secretId: ${{ secrets.VAULT_APPROLE_SECRET_ID }}
                  exportEnv: false
                  exportToken: false
                  secrets: >-
                      secret/data/vault_secrets/github_details/github_bot GH_BOT_GPG_PASSPHRASE ;

                      secret/data/vault_secrets/github_details/github_bot GH_BOT_GPG_PRIVATE_KEY ;

                      secret/data/vault_secrets/github_details/github_bot GH_BOT_API_TOKEN ;

                      secret/data/vault_secrets/external_services/ansible_galaxy GALAXY_API_KEY ;

            - name: Import GPG key
              id: import-gpg
              uses: crazy-max/ghaction-import-gpg@v6
              with:
                  gpg_private_key: "${{ steps.import-secrets.outputs.GH_BOT_GPG_PRIVATE_KEY }}"
                  passphrase: "${{ steps.import-secrets.outputs.GH_BOT_GPG_PASSPHRASE }}"
                  git_user_signingkey: true
                  git_commit_gpgsign: true
                  trust_level: 5

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: lts/*
                  cache-dependency-path: .github/files/package-lock.json

            - name: Setup Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.10"
                  cache: "pip"
                  cache-dependency-path: .github/files/requirements-dev.txt

            - name: Cache ansible
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.ansible
                      ~/.cache/ansible-*
                  key: ansible-cache-${{ hashFiles('**/requirements.yml') }}

            - name: Install python dependencies
              run: |+
                  pip install -r .github/files/requirements-dev.txt
                  ansible-galaxy install -r requirements.yml

            - name: Install node dependencies
              run: |+
                  npm i semantic-release@23.0.8 \
                    @semantic-release/commit-analyzer@12.0.0 \
                    @semantic-release/release-notes-generator@13.0.0 \
                    @semantic-release/changelog@6.0.3 \
                    @semantic-release/exec@6.0.3 \
                    @semantic-release/git@10.0.1 -D

            - name: Release
              run: |+
                  git config --global user.email "${{ steps.import-gpg.outputs.email }}"
                  git config --global user.name "${{ steps.import-gpg.outputs.name }}"
                  npx semantic-release@23.0.8 --extends ./.github/files/release.config.cjs
              env:
                  GITHUB_TOKEN: "${{ steps.import-secrets.outputs.GH_BOT_API_TOKEN }}"
                  GIT_AUTHOR_NAME: "${{ steps.import-gpg.outputs.name }}"
                  GIT_AUTHOR_EMAIL: "${{ steps.import-gpg.outputs.email }}"
                  GIT_COMMITTER_NAME: "${{ steps.import-gpg.outputs.name }}"
                  GIT_COMMITTER_EMAIL: "${{ steps.import-gpg.outputs.email }}"
                  GALAXY_API_KEY: "${{ steps.import-secrets.outputs.GALAXY_API_KEY }}"
