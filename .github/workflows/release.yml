---
name: Release
"on":
    push:
        branches:
            - main

jobs:
    release:
        permissions:
            contents: write
            issues: write
            pull-requests: write
            id-token: write
        name: release
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Import GPG key
              id: import-gpg
              uses: crazy-max/ghaction-import-gpg@v6
              with:
                  gpg_private_key: ${{ secrets.ARPANREC_GITHUB_ACTIONS_GPG_PRIVATE_KEY }}
                  passphrase: ${{ secrets.ARPANREC_GITHUB_ACTIONS_GPG_PRIVATE_KEY_PASSPHRASE }}
                  git_user_signingkey: true
                  git_commit_gpgsign: true
                  trust_level: 5

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: lts/*
                  cache-dependency-path: .github/files/package-lock.json

            - name: Setup Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.10"
                  cache: "pip"
                  cache-dependency-path: .github/files/requirements.txt

            - name: Install python dependencies
              run: |+
                  python -m pip install --upgrade pip wheel setuptools poetry
                  poetry export --without-hashes --format=requirements.txt --with dev > .github/files/requirements.txt
                  pip install -r .github/files/requirements.txt
                  if [ -f requirements.yml ]; then ansible-galaxy install -r requirements.yml; fi

            - name: Install node dependencies
              run: |+
                  npm i semantic-release \
                    @semantic-release/commit-analyzer \
                    @semantic-release/release-notes-generator \
                    @semantic-release/changelog \
                    @semantic-release/exec \
                    @semantic-release/git \
                    @semantic-release/github -D

            - name: Release
              run: |+
                  git config --global user.email "${{ steps.import-gpg.outputs.email }}"
                  git config --global user.name "${{ steps.import-gpg.outputs.name }}"
                  npx semantic-release --extends ./.github/files/release.config.js
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  GIT_AUTHOR_NAME: "${{ steps.import-gpg.outputs.name }}"
                  GIT_AUTHOR_EMAIL: "${{ steps.import-gpg.outputs.email }}"
                  GIT_COMMITTER_NAME: "${{ steps.import-gpg.outputs.name }}"
                  GIT_COMMITTER_EMAIL: "${{ steps.import-gpg.outputs.email }}"
