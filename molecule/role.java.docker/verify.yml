---
- name: Oracle JDK | Molecule | Verify
  hosts: all
  gather_facts: false
  tasks:
      - name: Oracle JDK | Molecule | Verify | Import Roles for variables
        ansible.builtin.import_role:
            name: arpanrec.nebula.java
            tasks_from: prerequisites

      - name: Oracle JDK | Get Version Details
        ansible.builtin.set_fact:
            oracle_jdk_tmp_version_details: "{{ lookup('arpanrec.nebula.version_db', 'java',
                java_rv_jdk_version=java_rv_jdk_version, java_rv_jdk_mvn_version=java_rv_jdk_mvn_version,
                java_rv_jdk_gradle_version=java_rv_jdk_gradle_version,
                java_rv_jdk_groovy_version=java_rv_jdk_groovy_version,
                java_rv_jdk_kotlinc_version=java_rv_jdk_kotlinc_version) }}"

      - name: Oracle JDK | Molecule | Verify | Get javac version from shell
        ansible.builtin.command: javac --version
        environment:
            PATH: "{{ java_rv_jdk_install_path }}/bin:{{ ansible_env.PATH }}"
        register: java_rv_jdk_tmp_version_shell_result
        changed_when: false

      - name: Oracle JDK | Molecule | Verify | javac version from shell result
        ansible.builtin.debug:
            var: java_rv_jdk_tmp_version_shell_result

      - name: Oracle JDK | Molecule | Verify | Fail if javac version is not present
        ansible.builtin.assert:
            that: java_rv_jdk_tmp_version_shell_result.stdout is match("javac "
                + oracle_jdk_tmp_version_details.version | string + ".*")
            success_msg: Java Version {{ oracle_jdk_tmp_version_details.version }} is installed
            fail_msg: "Java Version {{ oracle_jdk_tmp_version_details.version }} is not installed, \
                Shell result {{ java_rv_jdk_tmp_version_shell_result.stdout }}"

      - name: Oracle JDK | Apache Maven | Molecule | Verify | Get mvn version from shell
        ansible.builtin.command: mvn --version
        environment:
            PATH: "{{ java_rv_jdk_mvn_install_path }}/bin:{{ java_rv_jdk_install_path }}/bin:{{ ansible_env.PATH }}"
        register: java_rv_jdk_maven_tmp_version_shell_result
        changed_when: false

      - name: Oracle JDK | Apache Maven | Molecule | Verify | mvn version from shell result
        ansible.builtin.debug:
            var: java_rv_jdk_maven_tmp_version_shell_result

      - name: Oracle JDK | Apache Maven | Molecule | Verify | Fail if mvn version is not present
        ansible.builtin.assert:
            that: java_rv_jdk_maven_tmp_version_shell_result.stdout_lines[0]
                is match("Apache Maven " + oracle_jdk_tmp_version_details.extras.maven.version + ".*")
            success_msg: Apache Maven {{ oracle_jdk_tmp_version_details.extras.maven.version }} is installed
            fail_msg: Apache Maven {{ oracle_jdk_tmp_version_details.extras.maven.version }}
                is not installed, Shell result {{ java_rv_jdk_maven_tmp_version_shell_result.stdout }}

      - name: Oracle JDK | Gradle | Molecule | Verify | Get Gradle version from shell
        ansible.builtin.command: gradle -version
        environment:
            PATH: "{{ java_rv_jdk_gradle_install_path }}/bin:{{ java_rv_jdk_install_path }}/bin:{{ ansible_env.PATH }}"
        register: java_rv_jdk_gradle_tmp_version_shell_result
        changed_when: false

      - name: Oracle JDK | Gradle | Molecule | Verify | Gradle version from shell result
        ansible.builtin.debug:
            var: java_rv_jdk_gradle_tmp_version_shell_result

      - name: Oracle JDK | Gradle | Molecule | Verify | Fail if Gradle version is not present
        ansible.builtin.assert:
            that: '"Gradle " + oracle_jdk_tmp_version_details.version in
                java_rv_jdk_gradle_tmp_version_shell_result.stdout'
            success_msg: Gradle Version {{ oracle_jdk_tmp_version_details.version }} is installed
            fail_msg: Gradle Version {{ oracle_jdk_tmp_version_details.version }} is not installed,
                Shell result {{ java_rv_jdk_gradle_tmp_version_shell_result.stdout }}

      - name: Oracle JDK | Apache Groovy | Molecule | Verify | Get Apache Groovy version from shell
        ansible.builtin.command: groovy --version
        environment:
            PATH: "{{ java_rv_jdk_groovy_install_path }}/bin:{{ java_rv_jdk_install_path }}/bin:{{ ansible_env.PATH }}"
        register: java_rv_jdk_groovy_tmp_version_shell_result
        changed_when: false

      - name: Oracle JDK | Apache Groovy | Molecule | Verify | Apache Groovy version from shell result
        ansible.builtin.debug:
            var: java_rv_jdk_groovy_tmp_version_shell_result

      - name: Oracle JDK | Apache Groovy | Molecule | Verify | Fail if Apache Groovy version is not present
        ansible.builtin.assert:
            that: '"Groovy Version: " + java_rv_jdk_groovy_version in
                java_rv_jdk_groovy_tmp_version_shell_result.stdout'
            success_msg: Apache Groovy Version {{ java_rv_jdk_groovy_version }} is installed
            fail_msg: Apache Groovy Version {{ java_rv_jdk_groovy_version }} is not installed,
                Shell result {{ java_rv_jdk_groovy_tmp_version_shell_result.stdout }}

      - name: Oracle JDK | Kotlin | Kotlin Compiler | Molecule | Verify |
            Get Kotlin | Kotlin Compiler version from shell
        ansible.builtin.command: kotlinc -version
        environment:
            PATH: "{{ java_rv_jdk_kotlinc_install_path }}/bin:{{ java_rv_jdk_install_path }}/bin:{{ ansible_env.PATH }}"
        register: java_rv_jdk_kotlinc_tmp_version_shell_result
        changed_when: false

      - name: Oracle JDK | Kotlin | Kotlin Compiler | Molecule | Verify |
            Kotlin | Kotlin Compiler version from shell result
        ansible.builtin.debug:
            var: java_rv_jdk_kotlinc_tmp_version_shell_result

      - name: Oracle JDK | Kotlin | Kotlin Compiler | Molecule | Verify |
            Fail if Kotlin | Kotlin Compiler version is not present
        ansible.builtin.assert:
            that: '"kotlinc-jvm " + oracle_jdk_tmp_version_details.kotlinc.version
                in java_rv_jdk_kotlinc_tmp_version_shell_result.stderr'
            success_msg: Kotlin | Kotlin Compiler Version {{ oracle_jdk_tmp_version_details.kotlinc.version }}
                is installed
            fail_msg:
                Kotlin | Kotlin Compiler Version {{ oracle_jdk_tmp_version_details.kotlinc.version }} is not installed,
                Shell result {{ java_rv_jdk_kotlinc_tmp_version_shell_result.stderr }}

      - name: Oracle JDK | GraalVM | Molecule | Verify | Get javac version from shell
        ansible.builtin.command: native-image --version
        environment:
            PATH: "{{ java_rv_jdk_graalvm_install_path }}/bin:{{ java_rv_jdk_install_path }}/bin:{{ ansible_env.PATH }}"
        register: java_rv_jdk_graalvm_tmp_version_shell_result
        changed_when: false

      - name: Oracle JDK | GraalVM | Molecule | Verify | javac version from shell result
        ansible.builtin.debug:
            var: java_rv_jdk_graalvm_tmp_version_shell_result

      - name: Oracle JDK | GraalVM | Molecule | Verify | Fail if javac version is not present
        ansible.builtin.assert:
            that: java_rv_jdk_graalvm_tmp_version_shell_result.stdout is
                match("native-image " + oracle_jdk_tmp_version_details.version | string + ".*")
            success_msg: GraalVM Version {{ oracle_jdk_tmp_version_details.version }} is installed
            fail_msg: GraalVM Version {{ oracle_jdk_tmp_version_details.version }} is not installed,
                Shell result {{ java_rv_jdk_tmp_version_shell_result.stdout }}
